services:
  backend:
    build: skni_site_backend
    ports:
      - '8000:8000'
    networks:
      - skni_site
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    develop:
      watch:
        - action: sync
          path: ./skni_site_backend
          target: /app
        - action: rebuild
          path: ./skni_site_backend/poetry.lock
        - action: rebuild
          path: ./skni_site_backend/pyproject.toml
    environment:
      - CONTAINER=true
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
    networks:
      - skni_site
  db:
    image: postgres:15.7
    ports:
      - 5432:5432
    volumes:
      - skni_site_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: skni_site
    healthcheck:
      test: pg_isready -U postgres
      interval: 60s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - skni_site
#  frontend:
#    container_name: sknisite.ui.next
#    build:
#      context: ./skni_site_frontend
#      dockerfile: ./Dockerfile
#    ports:
#      - '8001:3000'
#    networks:
#      - skni_site
#    depends_on:
#      backend:
#        condition: service_started

volumes:
  skni_site_db_data:
  static_volume:
  media_volume:

networks:
  skni_site:
    driver: bridge
